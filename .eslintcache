[{"C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\index.js":"1","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\App.js":"2","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\WebSocket\\Kraken.js":"3","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\WebSocket\\Bitstamp.js":"4","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\Volume.js":"5","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\ShowVolume.js":"6","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\Price.js":"7","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\ShowPrice.js":"8","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Market.js":"9","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Vol.js":"10"},{"size":432,"mtime":1611131630108,"results":"11","hashOfConfig":"12"},{"size":529,"mtime":1619772735335,"results":"13","hashOfConfig":"12"},{"size":4964,"mtime":1619772707686,"results":"14","hashOfConfig":"12"},{"size":6605,"mtime":1616511616675,"results":"15","hashOfConfig":"12"},{"size":860,"mtime":1619772678702,"results":"16","hashOfConfig":"12"},{"size":1892,"mtime":1619772757528,"results":"17","hashOfConfig":"12"},{"size":1648,"mtime":1619772645304,"results":"18","hashOfConfig":"12"},{"size":1751,"mtime":1619770617429,"results":"19","hashOfConfig":"12"},{"size":3335,"mtime":1619772533658,"results":"20","hashOfConfig":"12"},{"size":3622,"mtime":1619771909789,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1euxt99",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\index.js",[],["47","48"],"C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\App.js",[],"C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\WebSocket\\Kraken.js",["49","50","51","52","53","54","55","56"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\n// import io from 'socket.io-client'\r\nimport logoBtc from '../image/logo1.jpg';\r\nimport logoEth from '../image/logo3.png';\r\nimport logoLTC from '../image/logo2.png';\r\nimport logoXrp from '../image/logo7.jpg';\r\n\r\nfunction Kraken(props) {\r\n\tconst [ KrakenBtc, setKrakenBtc ] = useState([]);\r\n\tconst [ KrakenEth, setKrakenEth ] = useState([]);\r\n\tconst [ KrakenXrp, setKrakenXrp ] = useState([]);\r\n\tconst [ KrakenLtc, setKrakenLtc ] = useState([]);\r\n\r\n\tconst [ dateBtc, setDateBtc ] = useState([]);\r\n\tconst [ dateEth, setDateEth ] = useState([]);\r\n\tconst [ dateLtc, setDateLtc ] = useState([]);\r\n\tconst [ dateXrp, setDateXrp ] = useState([]);\r\n\r\n\tlet x, x1, x2, x3;\r\n\r\n\tuseEffect(() => {\r\n\t\tvar websocketurl = 'wss://ws.kraken.com/';\r\n\t\tx = new WebSocket(websocketurl);\r\n\t\tx1 = new WebSocket(websocketurl);\r\n\t\tx2 = new WebSocket(websocketurl);\r\n\t\tx3 = new WebSocket(websocketurl);\r\n\r\n\t\tx.onopen = function() {};\r\n\t\tx1.onopen = function() {};\r\n\t\tx2.onopen = function() {};\r\n\t\tx3.onopen = function() {};\r\n\r\n\t\tfunction getDate() {\r\n\t\t\tvar date = new Date();\r\n\t\t\tlet currentHours = date.getHours();\r\n\t\t\tlet currentMinute = date.getMinutes();\r\n\t\t\tlet currentSecond = date.getSeconds();\r\n\r\n\t\t\tlet currentDate = date.getDate();\r\n\t\t\tlet currentMonth = date.getMonth();\r\n\t\t\tlet currentYear = date.getFullYear();\r\n\r\n\t\t\tcurrentHours = ('0' + currentHours).slice(-2);\r\n\t\t\tcurrentMinute = ('0' + currentMinute).slice(-2);\r\n\t\t\tcurrentSecond = ('0' + currentSecond).slice(-2);\r\n\r\n\t\t\tcurrentDate = ('0' + currentDate).slice(-2);\r\n\t\t\tcurrentMonth = ('0' + currentMonth).slice(-2);\r\n\r\n\t\t\tconst html = ` ${currentHours}:${currentMinute}:${currentSecond}   ${currentDate}:${currentMonth}:${currentYear}`;\r\n\r\n\t\t\treturn html;\r\n\t\t}\r\n\r\n\t\tx.onmessage = function(message) {\r\n\t\t\tlet datax = '';\r\n\t\t\tfor (let i = 8; i < 15; i++) {\r\n\t\t\t\tdatax = datax + message.data[i];\r\n\t\t\t}\r\n\t\t\tif (datax !== ':\"heart') {\r\n\t\t\t\tsetDateEth(getDate());\r\n\t\t\t\tsetKrakenEth(datax);\r\n\t\t\t}\r\n\t\t};\r\n\t\tx1.onmessage = function(message) {\r\n\t\t\tlet datax = '';\r\n\t\t\tfor (let i = 8; i < 16; i++) {\r\n\t\t\t\tdatax = datax + message.data[i];\r\n\t\t\t}\r\n\t\t\tif (datax !== ':\"heartb') {\r\n\t\t\t\tsetDateBtc(getDate());\r\n\t\t\t\tsetKrakenBtc(datax);\r\n\t\t\t}\r\n\t\t};\r\n\t\tx2.onmessage = function(message) {\r\n\t\t\tlet datax = '';\r\n\t\t\tfor (let i = 8; i < 16; i++) {\r\n\t\t\t\tdatax = datax + message.data[i];\r\n\t\t\t}\r\n\t\t\tif (datax !== ':\"heartb') {\r\n\t\t\t\tsetDateXrp(getDate());\r\n\t\t\t\tsetKrakenXrp(datax);\r\n\t\t\t}\r\n\t\t};\r\n\t\tx3.onmessage = function(message) {\r\n\t\t\tlet datax = '';\r\n\t\t\tfor (let i = 8; i < 16; i++) {\r\n\t\t\t\tdatax = datax + message.data[i];\r\n\t\t\t}\r\n\t\t\tif (datax !== ':\"heartb') {\r\n\t\t\t\tsetDateLtc(getDate());\r\n\t\t\t\tsetKrakenLtc(datax);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsetTimeout(function() {\r\n\t\t\tvar webSocketMessage = '{\"event\":\"subscribe\", \"subscription\":{\"name\":\"trade\"}, \"pair\":[\"ETH/USD\"]}';\r\n\t\t\tvar webSocketMessage1 = '{\"event\":\"subscribe\", \"subscription\":{\"name\":\"trade\"}, \"pair\":[\"XBT/USD\"]}';\r\n\t\t\tvar webSocketMessage2 = '{\"event\":\"subscribe\", \"subscription\":{\"name\":\"trade\"}, \"pair\":[\"XRP/USD\"]}';\r\n\t\t\tvar webSocketMessage3 = '{\"event\":\"subscribe\", \"subscription\":{\"name\":\"trade\"}, \"pair\":[\"LTC/USD\"]}';\r\n\r\n\t\t\tx1.send(webSocketMessage1);\r\n\t\t\tx.send(webSocketMessage);\r\n\t\t\tx2.send(webSocketMessage2);\r\n\t\t\tx3.send(webSocketMessage3);\r\n\t\t}, 20000);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"square\">\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t<img src={logoBtc} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"cryptoName\">\r\n\t\t\t\t\t\t\t<div className=\"name\">Bitcoin</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"date\">{dateBtc}</div>\r\n\t\t\t\t\t\t\t<div className=\"Btcvalue\">{(KrakenBtc * props.value).toFixed(2)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"square\">\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t<img src={logoEth} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"cryptoName\">\r\n\t\t\t\t\t\t\t<div className=\"name\">Etherum</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"date\">{dateEth}</div>\r\n\t\t\t\t\t\t\t<div className=\"Btcvalue\">{(KrakenEth * props.value).toFixed(2)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"square\">\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t<img src={logoLTC} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"cryptoName\">\r\n\t\t\t\t\t\t\t<div className=\"name\">Litcoin</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"date\">{dateLtc}</div>\r\n\t\t\t\t\t\t\t<div className=\"Btcvalue\">{(KrakenLtc * props.value).toFixed(2)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"square\">\r\n\t\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t\t<img src={logoXrp} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"cryptoName\">\r\n\t\t\t\t\t\t\t<div className=\"name\">XRP</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"date\">{dateXrp}</div>\r\n\t\t\t\t\t\t\t<div className=\"Btcvalue\">{(KrakenXrp * props.value).toFixed(2)}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Kraken;\r\n","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\WebSocket\\Bitstamp.js",["57","58"],"import React, { useRef, createRef,useState, useEffect } from 'react'\r\nimport '../App.css';\r\n\r\nimport logoBtc from '../image/logo1.jpg';\r\nimport logoEth from '../image/logo3.png';\r\nimport logoLTC from '../image/logo2.png';\r\nimport logoXrp from '../image/logo7.jpg';\r\n\r\n\r\n\r\n\r\nexport default function Bitstamp (props){\r\n\r\n    const [bsBtc, setBSBtc] = useState([]);\r\n    const [bsEth, setBSEth] = useState([]);\r\n    const [bsLtc, setBSLtc] = useState([]);\r\n    const [bsXrp, setBSXrp] = useState([]);\r\n\r\n    const [dateBtc, setDateBtc] = useState([]);\r\n    const [dateEth, setDateEth] = useState([]);\r\n    const [dateLtc, setDateLtc] = useState([]);\r\n    const [dateXrp, setDateXrp] = useState([]);\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n    \r\n    \r\n        var subscribeMsgBTC = {\r\n            \"event\": \"bts:subscribe\",\r\n            \"data\": {\r\n                \"channel\": \"live_trades_btcusd\"\r\n            },\r\n        };\r\n        var subscribeMsgETH = {\r\n            \"event\": \"bts:subscribe\",\r\n            \"data\": {\r\n                \"channel\": \"live_trades_ethusd\"\r\n            },\r\n        };\r\n\r\n        var subscribeMsgLTC = {\r\n            \"event\": \"bts:subscribe\",\r\n            \"data\": {\r\n                \"channel\": \"live_trades_ltcusd\"\r\n            },\r\n        };\r\n\r\n        var subscribeMsgXRP = {\r\n            \"event\": \"bts:subscribe\",\r\n            \"data\": {\r\n                \"channel\": \"live_trades_xrpusd\"\r\n            },\r\n        };\r\n\r\n\r\n        let wsBtc = new WebSocket(\"wss://ws.bitstamp.net\");\r\n        let wsEth = new WebSocket(\"wss://ws.bitstamp.net\");\r\n        let wsLtc = new WebSocket(\"wss://ws.bitstamp.net\");\r\n        let wsXrp = new WebSocket(\"wss://ws.bitstamp.net\");\r\n\r\n        wsBtc.onopen = function () {\r\n            wsBtc.send(JSON.stringify(subscribeMsgBTC));\r\n        };\r\n        wsEth.onopen = function () {\r\n            wsEth.send(JSON.stringify(subscribeMsgETH));\r\n        };\r\n        wsLtc.onopen = function () {\r\n            wsLtc.send(JSON.stringify(subscribeMsgLTC));\r\n        };\r\n        wsXrp.onopen = function () {\r\n            wsXrp.send(JSON.stringify(subscribeMsgXRP));\r\n        };\r\n\r\n\r\n        function getDate() {\r\n          \r\n            var date = new Date();\r\n            let currentHours = date.getHours();\r\n            let currentMinute = date.getMinutes();\r\n            let currentSecond = date.getSeconds();\r\n\r\n            let currentDate = date.getDate();\r\n            let currentMonth = date.getMonth();\r\n            let currentYear = date.getFullYear();\r\n\r\n            currentHours = (\"0\" + currentHours).slice(-2);\r\n            currentMinute = (\"0\" + currentMinute).slice(-2);\r\n            currentSecond = (\"0\" + currentSecond).slice(-2);\r\n\r\n            currentDate = (\"0\" + currentDate).slice(-2);\r\n            currentMonth = (\"0\" + currentMonth).slice(-2);\r\n\r\n            const html = ` ${currentHours}:${currentMinute}:${currentSecond}   ${currentDate}:${currentMonth}:${currentYear}`\r\n            return html;\r\n            \r\n        }\r\n\r\n\r\n        wsBtc.onmessage = function (evt) {\r\n            let response = JSON.parse(evt.data);\r\n            //console.log(response.data.price);\r\n            setBSBtc(response.data.price);\r\n            setDateBtc(getDate());\r\n        }\r\n        wsEth.onmessage = function (evt) {\r\n            let response = JSON.parse(evt.data);\r\n            //console.log(response.data.price);\r\n            setBSEth(response.data.price);\r\n            setDateEth(getDate());\r\n        }\r\n        wsLtc.onmessage = function (evt) {\r\n            let response = JSON.parse(evt.data);\r\n            //console.log(response.data.price);\r\n            setBSLtc(response.data.price);\r\n            setDateLtc(getDate());\r\n        }\r\n        wsXrp.onmessage = function (evt) {\r\n            let response = JSON.parse(evt.data);\r\n            //console.log(response.data.price);\r\n            setBSXrp(response.data.price);\r\n            setDateXrp(getDate());\r\n        }\r\n\r\n\r\n       \r\n\r\n        \r\n        \r\n    }, []);\r\n\r\n \r\n\r\n   \r\n   \r\n    return (\r\n        <>\r\n            <div >\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\" >\r\n                        <div className=\"square\">\r\n                            <div className=\"logo\"><img src={logoBtc} alt=\"logo\"></img></div>\r\n                            <div className=\"cryptoName\">\r\n                                <div className=\"name\">Bitcoin</div>\r\n\r\n                                <div className=\"date\">{dateBtc}</div>\r\n                                <div className=\"Btcvalue\">\r\n                                    {((bsBtc * props.value).toFixed(2))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\"><div className=\"square\">\r\n                        <div className=\"logo\"><img src={logoEth} alt=\"logo\"></img></div>\r\n                        <div className=\"cryptoName\">\r\n                            <div className=\"name\">Etherum</div>\r\n\r\n                            <div className=\"date\">{dateEth}</div>\r\n                            <div className=\"Btcvalue\">\r\n                                {(bsEth * props.value).toFixed(2)}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div></div>\r\n                    <div className=\"col\"><div className=\"square\">\r\n                        <div className=\"logo\"><img src={logoLTC} alt=\"logo\"></img></div>\r\n                        <div className=\"cryptoName\">\r\n                            <div className=\"name\">Litcoin</div>\r\n\r\n                            <div className=\"date\">{dateLtc}</div>\r\n                            <div className=\"Btcvalue\">\r\n                                {(bsLtc * props.value).toFixed(2)}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div></div>\r\n                    <div className=\"col\"><div className=\"square\">\r\n                        <div className=\"logo\"><img src={logoXrp} alt=\"logo\"></img></div>\r\n                        <div className=\"cryptoName\">\r\n                            <div className=\"name\">XRP</div>\r\n\r\n                            <div className=\"date\">{dateXrp}</div>\r\n                            <div className=\"Btcvalue\">\r\n                                {(bsXrp * props.value).toFixed(2)}\r\n                            </div>\r\n                        </div>\r\n                    </div></div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n        </>\r\n\r\n    )\r\n    \r\n}\r\n\r\n\r\n","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\Volume.js",[],"C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\ShowVolume.js",["59"],"import React, { useState } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst ShowVolume = ({showVolume , bitstamp , kraken}) => {\r\n    const [showBtc, setShowBtc] = useState('');\r\n    return (\r\n        <>\r\n        <div class=\"btn-group btn-group-justified\" >\r\n                <div class=\"btn-group\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={() => showVolume(0)}>BTC</button>\r\n                </div>\r\n                <div class=\"btn-group\">\r\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={() => showVolume(4)}> ETH</button>\r\n                </div>\r\n                <div class=\"btn-group\" >\r\n                    <button type=\"button\" class=\"btn btn-primary\" onClick={() => showVolume(8)} >LTC</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"TableStyle\" >\r\n                <Table striped bordered  >\r\n                    <tr>\r\n                        <th>---</th>\r\n                        <th>1m</th>\r\n                        <th>5m</th>\r\n                        <th>15m</th>\r\n                        <th>30m</th>\r\n                    </tr>\r\n                    <tr style={{ display: showBtc }}>\r\n                        <th>Bitstamp</th>\r\n                        <th> {bitstamp.one} </th>\r\n                        <th> {bitstamp.five} </th>\r\n                        <th> {bitstamp.fivetenn} </th>\r\n                        <th> {bitstamp.thirty} </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Kraken</th>\r\n                        <th> {kraken.one} </th>\r\n                        <th> {kraken.five} </th>\r\n                        <th> {kraken.fivetenn} </th>\r\n                        <th> {kraken.thirty} </th>\r\n                    </tr>\r\n\r\n                </Table>\r\n            </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default ShowVolume;","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\Price.js",[],"C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Components\\ShowPrice.js",[],"C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Market.js",["60","61","62","63","64","65"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction Market() {\r\n\tconst [ isOnline, setIsOnline ] = useState(null);\r\n\tconst notify = (x) => toast(x);\r\n\r\n\tuseEffect(() => {\r\n\t\tnotify('Start');\r\n\t\tsetInterval(() => {\r\n\t\t\tfetch('https://api.bitbay.net/rest/trading/stats').then((response) => response.json()).then((data) => {\r\n\t\t\t\tlet i = 0;\r\n\r\n\t\t\t\tfor (const [ key, value ] of Object.entries(data.items)) {\r\n\t\t\t\t\tvar temporary = [];\r\n\t\t\t\t\tvar typeTransaction = [];\r\n\t\t\t\t\t//console.clear();\r\n\t\t\t\t\taxios\r\n\t\t\t\t\t\t.get('https://api.bitbay.net/rest/trading/transactions/' + `${key}` + '?limit=30')\r\n\t\t\t\t\t\t.then((res) => {\r\n\t\t\t\t\t\t\ttemporary.push(`${key}`);\r\n\t\t\t\t\t\t\tfor (let i = 0; i <= 29; i++) {\r\n\t\t\t\t\t\t\t\tlet x = parseInt(res.data.items[i].t / 1000).toFixed(0);\r\n\t\t\t\t\t\t\t\tlet y = parseInt(x) + 720;\r\n\t\t\t\t\t\t\t\t//console.log(y);\r\n\t\t\t\t\t\t\t\tif (y > parseInt((Date.now() / 1000).toFixed(0))) {\r\n\t\t\t\t\t\t\t\t\ttemporary.push(parseFloat(res.data.items[i].r));\r\n\t\t\t\t\t\t\t\t\ttypeTransaction.push({ title: res.data.items[i].r, link: res.data.items[i].ty });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttemporary.sort();\r\n\t\t\t\t\t\t\ttypeTransaction.sort(sortFunction);\r\n\t\t\t\t\t\t\tfunction sortFunction(a, b) {\r\n\t\t\t\t\t\t\t\tif (a[0] === b[0]) {\r\n\t\t\t\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn a[0] < b[0] ? -1 : 1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//console.log(\"x\");\r\n\t\t\t\t\t\t\t// if(typeTransaction[])\r\n\t\t\t\t\t\t\tif (temporary.length > 2) {\r\n\t\t\t\t\t\t\t\tlet t = typeTransaction.length;\r\n\t\t\t\t\t\t\t\tlet k = temporary.length;\r\n\t\t\t\t\t\t\t\tlet counterX = 0,\r\n\t\t\t\t\t\t\t\t\tcounterY = 0;\r\n\t\t\t\t\t\t\t\tlet type;\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i <= t - 1; i++) {\r\n\t\t\t\t\t\t\t\t\tif (typeTransaction[i].link === 'Buy') {\r\n\t\t\t\t\t\t\t\t\t\tcounterX++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (typeTransaction[i].link === 'Sell') {\r\n\t\t\t\t\t\t\t\t\t\tcounterY++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (res.data.items[1].r <= 1) {\r\n\t\t\t\t\t\t\t\t\ttype = 1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (res.data.items[1].r > 1 && res.data.items[1].r <= 5) {\r\n\t\t\t\t\t\t\t\t\ttype = 7;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (res.data.items[1].r > 5) {\r\n\t\t\t\t\t\t\t\t\ttype = 1;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t((temporary[k - 2] - temporary[0]) / temporary[k - 2] * 100).toFixed(4) >= type &&\r\n\t\t\t\t\t\t\t\t\tcounterY >= 2 &&\r\n\t\t\t\t\t\t\t\t\tcounterX >= 2\r\n\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\tif (res.data.items[1].r < 1) {\r\n\t\t\t\t\t\t\t\t\t\t//console.log(temporary[k - 1]);\r\n\t\t\t\t\t\t\t\t\t\tsetIsOnline(true);\r\n\r\n\t\t\t\t\t\t\t\t\t\t//+ ' --- ' + k + 'ilość s/b = ' + counterX + ' --- ' + counterY + ' cena : ' + res.data.items[1].r);\r\n\t\t\t\t\t\t\t\t\t\t//console.log((((temporary[k - 2] - temporary[0]) / temporary[k - 2]) * 100).toFixed(4));\r\n\t\t\t\t\t\t\t\t\t\tnotify('Test');\r\n\t\t\t\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t\t\t\ttemporary[k - 1] === 'AMLT-PLN' ||\r\n\t\t\t\t\t\t\t\t\t\t\ttemporary[k - 1] === 'BOB-PLN' ||\r\n\t\t\t\t\t\t\t\t\t\t\ttemporary[k - 1] === 'LML-PLN' ||\r\n\t\t\t\t\t\t\t\t\t\t\ttemporary[k - 1] === 'BCP-PLN'\r\n\t\t\t\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tnotify(temporary[k - 1]);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttemporary = [];\r\n\t\t\t\t\t\t\ttypeTransaction = [];\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch((err) => {\r\n\t\t\t\t\t\t\t//console.log(err)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 300000);\r\n\t}, []);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* <button onClick={notify}>Notify!</button> */}\r\n\t\t\t<ToastContainer autoClose={null} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Market;\r\n","C:\\Users\\woj28\\Desktop\\Nowe-Projekty\\React_JS_Inne\\arbitool\\src\\Vol.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":24,"column":7,"nodeType":"72","endLine":24,"endColumn":34},{"ruleId":"70","severity":1,"message":"73","line":25,"column":8,"nodeType":"72","endLine":25,"endColumn":35},{"ruleId":"70","severity":1,"message":"74","line":26,"column":8,"nodeType":"72","endLine":26,"endColumn":35},{"ruleId":"70","severity":1,"message":"75","line":27,"column":8,"nodeType":"72","endLine":27,"endColumn":35},{"ruleId":"76","severity":1,"message":"77","line":116,"column":8,"nodeType":"78","endLine":116,"endColumn":29},{"ruleId":"76","severity":1,"message":"77","line":129,"column":8,"nodeType":"78","endLine":129,"endColumn":29},{"ruleId":"76","severity":1,"message":"77","line":142,"column":8,"nodeType":"78","endLine":142,"endColumn":29},{"ruleId":"76","severity":1,"message":"77","line":155,"column":8,"nodeType":"78","endLine":155,"endColumn":29},{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":1,"column":25,"nodeType":"81","messageId":"82","endLine":1,"endColumn":34},{"ruleId":"79","severity":1,"message":"84","line":5,"column":21,"nodeType":"81","messageId":"82","endLine":5,"endColumn":31},{"ruleId":"79","severity":1,"message":"85","line":8,"column":10,"nodeType":"81","messageId":"82","endLine":8,"endColumn":18},{"ruleId":"79","severity":1,"message":"86","line":17,"column":23,"nodeType":"81","messageId":"82","endLine":17,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":22,"column":64,"nodeType":"89","messageId":"90","endLine":22,"endColumn":65},{"ruleId":"87","severity":1,"message":"88","line":22,"column":75,"nodeType":"89","messageId":"90","endLine":22,"endColumn":76},{"ruleId":"91","severity":1,"message":"92","line":23,"column":13,"nodeType":"93","messageId":"94","endLine":96,"endColumn":8},{"ruleId":"79","severity":1,"message":"95","line":100,"column":6,"nodeType":"81","messageId":"82","endLine":100,"endColumn":7},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","Assignments to the 'x' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","Assignments to the 'x1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'x2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'x3' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'createRef' is defined but never used.","'setShowBtc' is assigned a value but never used.","'isOnline' is assigned a value but never used.","'value' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'temporary', 'temporary', 'typeTransaction', 'temporary', 'typeTransaction', 'temporary', 'typeTransaction', 'temporary', 'typeTransaction', 'typeTransaction', 'temporary', 'temporary', 'temporary', 'temporary', 'temporary', 'temporary', 'temporary', 'temporary', 'temporary', 'typeTransaction'.","ArrowFunctionExpression","unsafeRefs","'i' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]